// Code generated by protoc-gen-go. DO NOT EDIT.
// source: job.proto

/*
Package job is a generated protocol buffer package.

It is generated from these files:
	job.proto

It has these top-level messages:
	Job
	JobList
*/
package job

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import _ "google.golang.org/genproto/googleapis/api/annotations"
import google_protobuf1 "github.com/golang/protobuf/ptypes/empty"
import google_protobuf2 "github.com/golang/protobuf/ptypes/timestamp"
import autotest_protobuf "github.com/scaumiao/autotest/proto/stages"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type Job struct {
	Id      string                      `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	TaskId  string                      `protobuf:"bytes,2,opt,name=taskId" json:"taskId,omitempty"`
	Script  string                      `protobuf:"bytes,3,opt,name=script" json:"script,omitempty"`
	Msg     string                      `protobuf:"bytes,4,opt,name=msg" json:"msg,omitempty"`
	Result  string                      `protobuf:"bytes,5,opt,name=result" json:"result,omitempty"`
	StartAt *google_protobuf2.Timestamp `protobuf:"bytes,6,opt,name=start_at,json=startAt" json:"start_at,omitempty"`
	EndAt   *google_protobuf2.Timestamp `protobuf:"bytes,7,opt,name=end_at,json=endAt" json:"end_at,omitempty"`
	Stages  []*autotest_protobuf.Stage  `protobuf:"bytes,8,rep,name=stages" json:"stages,omitempty"`
}

func (m *Job) Reset()                    { *m = Job{} }
func (m *Job) String() string            { return proto.CompactTextString(m) }
func (*Job) ProtoMessage()               {}
func (*Job) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *Job) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *Job) GetTaskId() string {
	if m != nil {
		return m.TaskId
	}
	return ""
}

func (m *Job) GetScript() string {
	if m != nil {
		return m.Script
	}
	return ""
}

func (m *Job) GetMsg() string {
	if m != nil {
		return m.Msg
	}
	return ""
}

func (m *Job) GetResult() string {
	if m != nil {
		return m.Result
	}
	return ""
}

func (m *Job) GetStartAt() *google_protobuf2.Timestamp {
	if m != nil {
		return m.StartAt
	}
	return nil
}

func (m *Job) GetEndAt() *google_protobuf2.Timestamp {
	if m != nil {
		return m.EndAt
	}
	return nil
}

func (m *Job) GetStages() []*autotest_protobuf.Stage {
	if m != nil {
		return m.Stages
	}
	return nil
}

type JobList struct {
	Jobs []*Job `protobuf:"bytes,1,rep,name=jobs" json:"jobs,omitempty"`
}

func (m *JobList) Reset()                    { *m = JobList{} }
func (m *JobList) String() string            { return proto.CompactTextString(m) }
func (*JobList) ProtoMessage()               {}
func (*JobList) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *JobList) GetJobs() []*Job {
	if m != nil {
		return m.Jobs
	}
	return nil
}

func init() {
	proto.RegisterType((*Job)(nil), "autotest.protobuf.Job")
	proto.RegisterType((*JobList)(nil), "autotest.protobuf.JobList")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for JobService service

type JobServiceClient interface {
	GetJobList(ctx context.Context, in *google_protobuf1.Empty, opts ...grpc.CallOption) (*JobList, error)
	CreateJob(ctx context.Context, in *Job, opts ...grpc.CallOption) (*Job, error)
	UpdateJob(ctx context.Context, in *Job, opts ...grpc.CallOption) (*Job, error)
}

type jobServiceClient struct {
	cc *grpc.ClientConn
}

func NewJobServiceClient(cc *grpc.ClientConn) JobServiceClient {
	return &jobServiceClient{cc}
}

func (c *jobServiceClient) GetJobList(ctx context.Context, in *google_protobuf1.Empty, opts ...grpc.CallOption) (*JobList, error) {
	out := new(JobList)
	err := grpc.Invoke(ctx, "/autotest.protobuf.JobService/GetJobList", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *jobServiceClient) CreateJob(ctx context.Context, in *Job, opts ...grpc.CallOption) (*Job, error) {
	out := new(Job)
	err := grpc.Invoke(ctx, "/autotest.protobuf.JobService/CreateJob", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *jobServiceClient) UpdateJob(ctx context.Context, in *Job, opts ...grpc.CallOption) (*Job, error) {
	out := new(Job)
	err := grpc.Invoke(ctx, "/autotest.protobuf.JobService/UpdateJob", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for JobService service

type JobServiceServer interface {
	GetJobList(context.Context, *google_protobuf1.Empty) (*JobList, error)
	CreateJob(context.Context, *Job) (*Job, error)
	UpdateJob(context.Context, *Job) (*Job, error)
}

func RegisterJobServiceServer(s *grpc.Server, srv JobServiceServer) {
	s.RegisterService(&_JobService_serviceDesc, srv)
}

func _JobService_GetJobList_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(google_protobuf1.Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(JobServiceServer).GetJobList(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/autotest.protobuf.JobService/GetJobList",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(JobServiceServer).GetJobList(ctx, req.(*google_protobuf1.Empty))
	}
	return interceptor(ctx, in, info, handler)
}

func _JobService_CreateJob_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Job)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(JobServiceServer).CreateJob(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/autotest.protobuf.JobService/CreateJob",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(JobServiceServer).CreateJob(ctx, req.(*Job))
	}
	return interceptor(ctx, in, info, handler)
}

func _JobService_UpdateJob_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Job)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(JobServiceServer).UpdateJob(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/autotest.protobuf.JobService/UpdateJob",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(JobServiceServer).UpdateJob(ctx, req.(*Job))
	}
	return interceptor(ctx, in, info, handler)
}

var _JobService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "autotest.protobuf.JobService",
	HandlerType: (*JobServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetJobList",
			Handler:    _JobService_GetJobList_Handler,
		},
		{
			MethodName: "CreateJob",
			Handler:    _JobService_CreateJob_Handler,
		},
		{
			MethodName: "UpdateJob",
			Handler:    _JobService_UpdateJob_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "job.proto",
}

func init() { proto.RegisterFile("job.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 402 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0x9c, 0x92, 0xc1, 0x6f, 0xd3, 0x30,
	0x14, 0xc6, 0x69, 0xd2, 0xa6, 0xad, 0x91, 0x50, 0xf1, 0xa1, 0x32, 0x01, 0x89, 0x2a, 0x27, 0x54,
	0xa1, 0x98, 0x16, 0xf5, 0x84, 0x38, 0x00, 0x42, 0x08, 0xc4, 0x29, 0x85, 0xcb, 0x2e, 0x93, 0x93,
	0x78, 0x99, 0xb7, 0x26, 0x8e, 0xe2, 0x97, 0x4a, 0xbb, 0xee, 0xba, 0xe3, 0xfe, 0xb4, 0xdd, 0x77,
	0xda, 0x1f, 0x32, 0x3b, 0x4e, 0x76, 0x58, 0x5b, 0x4d, 0xda, 0xa1, 0xb2, 0xbf, 0xef, 0xfd, 0x3e,
	0xf7, 0xf9, 0x39, 0x68, 0x7c, 0x26, 0xe3, 0xb0, 0xac, 0x24, 0x48, 0xfc, 0x9a, 0xd5, 0x20, 0x81,
	0x2b, 0xb0, 0x3a, 0xae, 0x4f, 0xfc, 0x77, 0x99, 0x94, 0xd9, 0x86, 0x53, 0x56, 0x0a, 0xca, 0x8a,
	0x42, 0x02, 0x03, 0x21, 0x0b, 0x65, 0x01, 0xff, 0x6d, 0x5b, 0xed, 0x70, 0xca, 0xf3, 0x12, 0x2e,
	0xda, 0xe2, 0xfb, 0xc7, 0x45, 0x10, 0xb9, 0x3e, 0x9b, 0xe5, 0x65, 0x0b, 0xbc, 0x69, 0x16, 0xaa,
	0xad, 0x8c, 0xab, 0x76, 0xb1, 0xa5, 0xe0, 0xca, 0x41, 0xee, 0x1f, 0x19, 0xe3, 0x57, 0xc8, 0x11,
	0x29, 0xe9, 0xcd, 0x7a, 0x1f, 0xc6, 0x91, 0xde, 0xe1, 0x29, 0xf2, 0x80, 0xa9, 0xf3, 0xdf, 0x29,
	0x71, 0x1a, 0xaf, 0x55, 0xc6, 0x57, 0x49, 0x25, 0x4a, 0x20, 0xae, 0xf5, 0xad, 0xc2, 0x13, 0xe4,
	0xe6, 0x2a, 0x23, 0xfd, 0xc6, 0x34, 0x5b, 0x43, 0x56, 0x5c, 0xd5, 0x1b, 0x20, 0x03, 0x4b, 0x5a,
	0x85, 0x57, 0x68, 0xa4, 0x3b, 0xa8, 0xe0, 0x98, 0x01, 0xf1, 0x74, 0xe5, 0xe5, 0xd2, 0x0f, 0xed,
	0x05, 0x1e, 0x86, 0x11, 0xfe, 0xeb, 0x2e, 0x10, 0x0d, 0x1b, 0xf6, 0x1b, 0xe0, 0x05, 0xf2, 0x78,
	0x91, 0x9a, 0xd0, 0xf0, 0xc9, 0xd0, 0x40, 0x93, 0x3a, 0xf2, 0x49, 0xf7, 0xda, 0xdc, 0x95, 0x8c,
	0x66, 0xae, 0x8e, 0x90, 0x70, 0x67, 0xec, 0xe1, 0xda, 0x00, 0x51, 0xcb, 0x05, 0x2b, 0x34, 0xd4,
	0xc3, 0xf8, 0x2b, 0x14, 0xe0, 0x39, 0xea, 0xeb, 0xf7, 0x52, 0x7a, 0x24, 0x26, 0x3a, 0xdd, 0x13,
	0xd5, 0x64, 0xd4, 0x30, 0xcb, 0xdb, 0x1e, 0x42, 0x5a, 0xad, 0x79, 0xb5, 0x15, 0x09, 0xc7, 0x11,
	0x42, 0xbf, 0x38, 0x74, 0x07, 0x4d, 0x77, 0x1a, 0xfd, 0x69, 0xde, 0xce, 0xf7, 0xf7, 0x1f, 0x69,
	0x32, 0xc1, 0xe4, 0xf2, 0xe6, 0xee, 0xda, 0x41, 0x78, 0x44, 0xb7, 0x0b, 0x6a, 0xfe, 0x02, 0x7f,
	0x45, 0xe3, 0x1f, 0x15, 0x67, 0xc0, 0xcd, 0x63, 0x1d, 0xe8, 0xc6, 0x3f, 0xe0, 0x07, 0x2f, 0x4c,
	0xfc, 0x7f, 0x99, 0x3e, 0x37, 0xfe, 0xfd, 0xe3, 0xd1, 0x3c, 0x13, 0x70, 0x5a, 0xc7, 0x61, 0x22,
	0x73, 0xaa, 0x12, 0x56, 0xe7, 0x82, 0x49, 0xda, 0xe1, 0xf6, 0xcb, 0x33, 0x8d, 0x7e, 0xd1, 0xbf,
	0xd8, 0x6b, 0xe4, 0xe7, 0xfb, 0x00, 0x00, 0x00, 0xff, 0xff, 0x68, 0xc4, 0xee, 0xb3, 0xf1, 0x02,
	0x00, 0x00,
}
